{"version":3,"sources":["components/header/header.js","components/footer/footer.js","video-call/video-call.jsx","components/authentication/auth.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","username","setUsername","image","setImage","useEffect","profile","localStorage","getItem","JSON","parse","currentTime","setcurrentTime","setInterval","d","Date","toString","split","className","style","marginTop","marginLeft","Button","variant","onClick","clear","window","location","reload","src","id","padding","Footer","Link","href","target","fontSize","socket","io","connect","VideoCall","me","setme","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","callerName","setcallerName","usernameToCall","setusernameToCall","myVideo","useRef","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","current","srcObject","on","data","from","signal","emit","playsInline","muted","ref","autoPlay","TextField","label","value","onChange","e","color","destroy","IconButton","aria-label","peer","Peer","initiator","trickle","config","iceServers","urls","credential","signalData","callUser","to","responseGoogle","response","profileObj","console","log","setItem","stringify","email","imageUrl","Auth","clientId","buttonText","onSuccess","onFailure","cookiePolicy","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6de2bddb.chunk.js","sourcesContent":["import \"./header.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nfunction Header() {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        const profile = localStorage.getItem(\"profile\");\r\n        if (profile) {\r\n            const { username, image } = JSON.parse(profile);\r\n            setUsername(username);\r\n            setImage(image);\r\n        }\r\n    }, [])\r\n\r\n    const [currentTime, setcurrentTime] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            const date = new Date().toString();\r\n            const d = date.split(\"GMT\")[0];\r\n            setcurrentTime(d);\r\n        }, 1000)\r\n    }, [])\r\n\r\n\r\n    const logOut = () => {\r\n        localStorage.clear();\r\n        window.location.reload();\r\n    }\r\n\r\n    return <div> <ul className=\"header\">\r\n        <li className=\"h-font\">Meets by <strong>Mohsin</strong></li>\r\n        <li className=\"header-right\" style={{ marginTop: \"0.5em\", marginLeft: \"0.4em\" }}>\r\n            { username?<Button variant=\"outlined\" onClick={logOut}>Log Out</Button>:\"\"}</li>\r\n        <li className=\"header-right\" style={{ marginTop: \"0.5em\" }} >{image ? <img src={image} id=\"profile-pic\"></img> : \"\"}</li>\r\n        <li className=\"header-right\" style={{ padding: \"1em 0.5em 0 0em\" }} >{username}</li>\r\n        <li className=\"header-right\" style={{ padding: \"1em 0.5em 0 0em\" }}> â€¢ </li>\r\n        <li className=\"header-right time\" style={{ padding: \"1em 0.5em 0 0em\" }}>{currentTime}</li>\r\n    </ul>\r\n    </div>\r\n}\r\n\r\nexport default Header;","import \"./footer.css\";\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"@mui/material\";\r\nfunction Footer(){\r\n    return <div className=\"footer\">\r\n       <Link href=\"https://github.com/MohsinAliFarhat?tab=repositories\" target=\"_blank\"><GitHubIcon fontSize=\"large\" /></Link> \r\n    </div>\r\n}\r\nexport default Footer;","import \"./video-call.css\";\r\nimport Footer from \"../components/footer/footer\"\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport Peer from \"simple-peer\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport io from \"socket.io-client\";\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst socket = io.connect(\"https://mohsin-meets-backend.herokuapp.com/\")\r\n\r\n\r\nfunction VideoCall() {\r\n  const [me, setme] = useState(\"\");\r\n  const [stream, setStream] = useState(\"\");\r\n  const [receivingCall, setReceivingCall] = useState(false);\r\n  const [caller, setCaller] = useState(\"\");\r\n  const [callerSignal, setCallerSignal] = useState();\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [callerName, setcallerName] = useState(\"\")\r\n  const [usernameToCall, setusernameToCall] = useState(\"\")\r\n\r\n\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n\r\n  useEffect(() => {\r\n    //Get permission from user to use video camera and microphone\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n      setStream(stream);\r\n      myVideo.current.srcObject = stream;\r\n    })\r\n\r\n    socket.on(\"me\", (id) => {\r\n      setme(id);\r\n    })\r\n\r\n\r\n\r\n    socket.on(\"callUser\", (data) => {\r\n      setReceivingCall(true);\r\n      setCaller(data.from);\r\n      setcallerName(data.name);\r\n      setCallerSignal(data.signal);\r\n    })\r\n\r\n  }, [])\r\n  useEffect(() => {\r\n    if(username){\r\n      socket.emit(\"addUser\", username)\r\n    }\r\n  }, [name])\r\n\r\n  useEffect(() => {\r\n    const { name, username } = JSON.parse(localStorage.getItem(\"profile\"));\r\n    setUsername(username);\r\n    setName(name);\r\n  }, [])\r\n\r\n  const callUser = (id) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      config: {\r\n        iceServers: [{\r\n          urls: 'stun:numb.viagenie.ca', credential: 'Mohsin123!',\r\n          username: 'mohsingujjar08@gmail.com'\r\n        },\r\n        {\r\n          urls: 'turn:numb.viagenie.ca', credential: 'Mohsin123!',\r\n          username: 'mohsingujjar08@gmail.com'\r\n        }]\r\n      },\r\n      stream: stream\r\n    })\r\n\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"callUser\", {\r\n        signalData: data,\r\n        from: me,\r\n        name: name,\r\n        username: usernameToCall\r\n      })\r\n    })\r\n\r\n    peer.on(\"stream\", (stream) => {\r\n      userVideo.current.srcObject = stream;\r\n    });\r\n\r\n\r\n    socket.on(\"callAccepted\", (signal) => {\r\n      setCallAccepted(true);\r\n      peer.signal(signal);\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n\r\n  }\r\n\r\n\r\n  const answerCall = () => {\r\n    setCallAccepted(true);\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      config: {\r\n        iceServers: [{\r\n          urls: 'stun:numb.viagenie.ca', credential: 'Mohsin123!',\r\n          username: 'mohsingujjar08@gmail.com'\r\n        },\r\n        {\r\n          urls: 'turn:numb.viagenie.ca', credential: 'Mohsin123!',\r\n          username: 'mohsingujjar08@gmail.com'\r\n        }]\r\n      },\r\n      trickle: false,\r\n      stream: stream\r\n    })\r\n\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"answerCall\", { signal: data, to: caller })\r\n    })\r\n\r\n\r\n    peer.on(\"stream\", (stream) => {\r\n      userVideo.current.srcObject = stream;\r\n    });\r\n\r\n    peer.signal(callerSignal)\r\n    connectionRef.current = peer;\r\n  }\r\n\r\n\r\n  const leaveCall = () => {\r\n    setCallEnded(true);\r\n    connectionRef.current.destroy();\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div >\r\n          {stream && <video className=\"video\" playsInline muted ref={myVideo} autoPlay />}\r\n        </div>\r\n\r\n        <div>\r\n          {callAccepted && !callEnded ?\r\n            <video className=\"video\" playsInline ref={userVideo} autoPlay /> : null}\r\n        </div>\r\n\r\n        <div className=\"details\">\r\n          <div className=\"u-name\">\r\n            Hello {name} !\r\n          </div>\r\n          <TextField\r\n            className=\"i-details\"\r\n            label=\"Enter username to Call\"\r\n            variant=\"outlined\"\r\n            value={usernameToCall}\r\n            onChange={(e) => setusernameToCall(e.target.value)}\r\n          />\r\n          <div className=\"call-button\">\r\n            {callAccepted && !callEnded ? (\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={leaveCall}>\r\n                End Call with {callerName}\r\n              </Button>\r\n            ) : (\r\n              <IconButton color=\"primary\" aria-label=\"call\" onClick={() => callUser(usernameToCall)}>\r\n                <PhoneIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div>\r\n        {receivingCall && !callAccepted ? (\r\n          <div className=\"caller\">\r\n            <h1 >{callerName} is calling...</h1>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n              Answer\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoCall;","import GoogleLogin from \"react-google-login\";\r\nimport React from \"react\"\r\nimport \"./auth.css\"\r\nconst responseGoogle = (response) => {\r\n    const profile = response.profileObj;\r\n    console.log(profile);\r\n    if (profile) {\r\n        localStorage.setItem(\"profile\", JSON.stringify({\r\n            username: profile.email.split(\"@\")[0],\r\n            image: profile.imageUrl,\r\n            name:profile.name\r\n        }))\r\n        window.location.reload();\r\n    }else{\r\n        console.log(\"NOTHING returned\")\r\n    }\r\n}\r\nfunction Auth() {\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='g-font'>Please Login To Continue to free Video Call App</h2>\r\n            <GoogleLogin\r\n                clientId=\"466743185625-62lthnm4la02e5rdbgintqlc3h0nac1g.apps.googleusercontent.com\"\r\n                buttonText=\"Login\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n        </div>)\r\n}\r\n\r\nexport default Auth;","import './App.css';\nimport Header from './components/header/header'\nimport VideoCall from './video-call/video-call';\nimport Auth from './components/authentication/auth.jsx';\n\nconst profile = localStorage.getItem('profile');\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      {profile ? <VideoCall /> :  <Auth />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'typeface-roboto'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}